import telebot
from telebot import types
from PIL import Image, ImageFont, ImageDraw, ImageFilter
import sqlite3
import io

bot = telebot.TeleBot('1262098190:AAGA8ugBKL5UW6D_z2X43rldKNfn32BUiVo')

# db = sqlite3.connect('server.db')
# sql = db.cursor()

# sql.execute("""CREATE TABLE IF NOT EXISTS users (
#  h1 TEXT,
#  h2 TEXT,
#  h3 TEXT,
#  h4 TEXT,
#  h5 TEXT,
#  h6 TEXT,
#  h7 TEXT,
#  week TEXT,
# vg2 TEXT,
# plans TEXT,
# ) """)

# db.commit()
global name


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.from_user.id, """        
–ü—Ä–∏–≤—ñ—Ç! –Ø –•-–ú–∞–º–∞!ü§±üèΩ
–Ø–∫—â–æ —Ç–∏ —â–µ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–ª–∞—Å—è –≤ –Ω–∞—à–æ–º—É –∫–ª—É–±—ñ - —è —Ç–æ–±—ñ –¥–æ–ø–æ–º–æ–∂—É!ü§ó
–†–æ–∑–∫–∞–∂—É –ø—Ä–æ X-Mothers —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–º –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è.
–¢–∏—Å–Ω–∏ –Ω–∞ - /menu
        """)


@bot.message_handler(commands=['list'])
def list(message):
    user_id = message.from_user.id
    if user_id == 906203059:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ó–∞ –º—ñ—Å—Ç–æ–º –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è")
        item2 = types.KeyboardButton("–í–∞–≥—ñ—Ç–Ω–∞")
        item3 = types.KeyboardButton("–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é –¥–æ 6 –º—ñ—Å—è—Ü—ñ–≤")
        item4 = types.KeyboardButton("–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é 1-3—Ö —Ä–æ–∫—ñ–≤")
        item5 = types.KeyboardButton("–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é –¥–æ 1 —Ä–æ–∫—É")
        item6 = types.KeyboardButton("–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é 3-7 —Ä–æ–∫—ñ–≤")
        item7 = types.KeyboardButton("–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é –≤—ñ–¥ 7 —Ä–æ–∫—ñ–≤(—à–∫–æ–ª—è—Ä)")
        markup.add(item1, item2, item3, item4, item5, item6, item7)
        bot.send_message(message.from_user.id, '–Ø–∫–∏–º —Ç–µ–≥–∞–º?', reply_markup=markup)
        bot.register_next_step_handler(message, get_pp)
    else:
        bot.send_message(message.from_user.id, '–¶—è –∫–æ–º–∞–Ω–¥–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Å—É–ø–µ—Ä–º–∞–º, —è–∫—ñ 24/7 –ø—Ä–∞—Ü—é—é—Ç—å –¥–ª—è –≤–∞—Å!')


def get_pp(message):
    g = bot.send_message(message.from_user.id, '–¢–µ–∫—Å—Ç —Ä–æ–∑—Å–∏–ª–∫–∏')

    def geev(message):
        if message.text == '–ó–∞ –º—ñ—Å—Ç–æ–º –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è':
            bot.send_message(message.from_user.id, '–Ø–∫–µ –º—ñ—Å—Ç–æ?')
            bot.register_next_step_handler(message, get_misto)
            if misto == '–ö–∏—ó–≤':
                bot.send_message(message.from_user.id, gg)
        elif message.text == '–í–∞–≥—ñ—Ç–Ω–∞':
            if vg == '–¢–∞–∫':
                bot.send_message(message.from_user.id, gg)
        elif message.text == '–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é –¥–æ 6 –º—ñ—Å—è—Ü—ñ–≤':
            if babyl == babyl < int(1):
                bot.send_message(message.from_user.id, gg)
        elif message.text == '–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é 1-3—Ö —Ä–æ–∫—ñ–≤':
            if babyl == int(2):
                bot.send_message(message.from_user.id, gg)
            elif babyl == int(3):
                bot.send_message(message.from_user.id, gg)
        elif message.text == '–ó –¥–∏—Ç–∏–Ω–æ—é –¥–æ –æ–¥–Ω–æ–≥–æ —Ä–æ–∫—É':
            if babyl == int(1):
                bot.send_message(message.from_user.id, gg)
        elif message.text == '–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é 3-7 —Ä–æ–∫—ñ–≤':
            if babyl == int(3):
                bot.send_message(message.from_user.id, gg)
            elif babyl == int(4):
                bot.send_message(message.from_user.id, gg)
            elif babyl == int(5):
                bot.send_message(message.from_user.id, gg)
            elif babyl == int(6):
                bot.send_message(message.from_user.id, gg)
            elif babyl == int(7):
                bot.send_message(message.from_user.id, gg)
        elif message.text == '–ú–∞–º–∞ –∑ –¥–∏—Ç–∏–Ω–æ—é –≤—ñ–¥ 7 —Ä–æ–∫—ñ–≤(—à–∫–æ–ª—è—Ä)':
            if babyl == babyl > int(6):
                bot.send_message(message.from_user.id, gg)
        else:
            bot.send_message(message.from_user.id, '–í–∏ –∑—Ä–æ–±–∏–ª–∏ —â–æ—Å—å –Ω–µ —Ç–∞–∫')


@bot.message_handler(commands=['menu'])
def keyboard(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    buttons = [
        types.InlineKeyboardButton(
            text='–•–æ—á—É —Å—Ç–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü–µ—é –∫–ª—É–±–∞ –º–∞–º –•-Mothers',
            callback_data='k1'
        ),
        types.InlineKeyboardButton(
            text='–•–æ—á—É —Å—Ç–∞—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º',
            url='https://www.xmothers.com/spivprachya/'
        ),
        types.InlineKeyboardButton(
            text='–•–æ—á—É —Å—Ç–∞—Ç–∏ –≤–∞—à–∏–º –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–æ–º',
            url='https://www.xmothers.com/spivprachya/'
        ),
        types.InlineKeyboardButton(
            text='–Ø –º–∞–º–∞ –±–ª–æ–≥–µ—Ä',
            url='https://www.xmothers.com/spivprachya/'
        ),
        types.InlineKeyboardButton(
            text='FAQ(—á–∞—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è)',
            callback_data='k5'
        ),
        types.InlineKeyboardButton(
            text='–ü—Ä–æ –∫–ª—É–±',
            url='https://www.xmothers.com/'
        ),
        types.InlineKeyboardButton(
            text='–ù–∞—à—ñ –ø–∞—Ä—Ç–Ω–µ—Ä–∏',
            url='https://www.xmothers.com/partners/'
        ),
        types.InlineKeyboardButton(
            text='–ß–∞—Ç –º–∞–º –º–æ–≥–æ –º—ñ—Å—Ç–∞',
            url='https://www.xmothers.com/contact/ '
        ),
        types.InlineKeyboardButton(
            text='–ú–∏ –≤ —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂–∞—Ö',
            callback_data='k7'
        ),
    ]
    markup.add(*buttons)
    bot.send_message(message.from_user.id, """
–ü—Ä–∏–≤—ñ—Ç! –û—Å—å –º–∏ –∑–Ω–æ–≤—É –π –∑—É—Å—Ç—Ä—ñ–ª–∏—Å—å‚ò∫Ô∏è
–•–æ—á–µ—à —Å—Ç–∞—Ç–∏ —É—á—Å–Ω–∏—Ü–µ—é –∫–ª—É–±—É X-Mothers ‚Äì —Ç–∏—Å–Ω–∏ –Ω–∞ –ø–µ—Ä—à—É –∫–Ω–æ–ø–∫—É —Ç–∞ –∑–∞–ø–æ–≤–Ω–∏ –∞–Ω–∫–µ—Ç—É.
–ß–∏ —Ö–æ—á–µ—à —Å–ø–æ—á–∞—Ç–∫—É –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ –Ω–∞—à–∏–º –∫–ª—É–±–æ–º?
–ü–∞–º‚Äô—è—Ç–∞–π, —Ç–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—à –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥–æ—é - /menu """, reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'k1':
                bot.send_message(call.message.chat.id, """  
–©–æ–± —Å—Ç–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü–µ—é –Ω–∞—à–æ–≥–æ –∫–ª—É–±—É, –¥–∞–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ 10 –ø–∏—Ç–∞–Ω—å, –ø—ñ—Å–ª—è —á–æ–≥–æ –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —ñ–º–µ–Ω–Ω—É –∫–∞—Ä—Ç—É —É—á–∞—Å–Ω–∏—Ü—ñ –∫–ª—É–±—É X-Mothers!
  """)
                markup = types.ReplyKeyboardMarkup(True, True)
                item1 = types.KeyboardButton("–¢–∞–∫")
                item2 = types.KeyboardButton("–ù—ñ");
                markup.add(item1, item2)
                bot.send_message(call.message.chat.id, '–ü–æ—á–Ω–µ–º–æ?', reply_markup=markup)
                bot.register_next_step_handler(call.message, get_h1)
            elif call.data == 'k2':
                bot.send_message(call.message.chat.id, '–ü–∞—Ä—Ç–Ω–µ—Ä')
                bot.register_next_step_handler(call.message, get_h2)
            elif call.data == 'k3':
                bot.send_message(call.message.chat.id, '–Ø –∫–Ω–æ–ø–∫–∞')
            elif call.data == 'k4':
                bot.send_message(call.message.chat.id, '–Ø –∫–Ω–æ–ø–∫–∞')
            elif call.data == 'k5':
                markup = types.InlineKeyboardMarkup(row_width=1)
                buttonss = [
                    types.InlineKeyboardButton(
                        text='–†–æ–∑–∫–∞–∂—ñ—Ç—å –º–µ–Ω—ñ –ø—Ä–æ –∫–ª—É–±',
                        callback_data='f1'
                    ),
                    types.InlineKeyboardButton(
                        text='–©–æ –¥–∞—î –∫–∞—Ä—Ç–∞ —É—á–∞—Å–Ω–∏—Ü—ñ –∫–ª—É–±—É?',
                        callback_data='f2'
                    ),
                    types.InlineKeyboardButton(
                        text='–Ø–∫ —Å—Ç–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü–µ—é –∫–ª—É–±—É?',
                        callback_data='f3'
                    ),
                    types.InlineKeyboardButton(
                        text='–•—Ç–æ –≤–∞—à—ñ –ø–∞—Ä—Ç–Ω–µ—Ä–∏?',
                        callback_data='f4'
                    ),
                    types.InlineKeyboardButton(
                        text='–ß–∞—Ç –º–∞–º –º–æ–≥–æ –º—ñ—Å—Ç–∞',
                        callback_data='f5'
                    ),
                    types.InlineKeyboardButton(
                        text='–ù–∞–ø–∏—Å–∞—Ç–∏ –Ω–∞–º!',
                        callback_data='f6'
                    ),
                ]
                markup.add(*buttonss)
                bot.send_message(call.message.chat.id, "–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", reply_markup=markup)

            elif call.data == 'k6':
                bot.send_message(call.message.chat.id, '–Ø –∫–Ω–æ–ø–∫–∞')
            elif call.data == 'k7':
                markup = types.InlineKeyboardMarkup(row_width=1)
                switch_buttonp = [
                    types.InlineKeyboardButton(
                        text='Instagram',
                        url="https://instagram.com/_xmothers_?igshid=13vt14b4z4g1e"
                    ),
                    types.InlineKeyboardButton(
                        text='Telegram',
                        url="tg://resolve?domain=xmothers"
                    ),
                    types.InlineKeyboardButton(
                        text='Facebook',
                        url="https://m.facebook.com/xmothers"
                    ),
                    types.InlineKeyboardButton(
                        text='YouTube',
                        url="https://www.youtube.com/channel/UChbkB6GDX2mf-zgAzvSNxBg/featured"
                    ),
                ]
                markup.add(*switch_buttonp)
                bot.send_message(call.message.chat.id, '–ù–∞—à—ñ —Å–æ—Ü. –º–µ—Ä–µ–∂—ñ', reply_markup=markup)
            elif call.data == 'f1':
                markup = types.InlineKeyboardMarkup(row_width=1)
                switch_buttong = [
                    types.InlineKeyboardButton(
                        text='–î—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ ',
                        url="https://www.xmothers.com/pro-klub/"
                    ),
                ]
                markup.add(*switch_buttong)
                bot.send_message(call.message.chat.id, """
–ö–ª—É–± X-Mothers —Å—Ç–≤–æ—Ä–µ–Ω–∏–π, —â–æ–± –æ–±‚Äô—î–¥–Ω—É–≤–∞—Ç–∏ –º–∞–º –£–∫—Ä–∞—ó–Ω–∏. 
    –ù–∞—à–∞ –º–µ—Ç–∞ ‚Äì –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤—É–≤–∞—Ç–∏ –¥–ª—è –º–∞–º –ø—Ä–∏–≤—ñ–ª–µ—ó —Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, —è–∫—ñ –ø–æ–ª–µ–≥—à–∞—Ç—å –∂–∏—Ç—Ç—è, –ø—Ä–∏–Ω–µ—Å—É—Ç—å –∫–æ—Ä–∏—Å—Ç—å, 
–∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è —Ç–∞ –∑–µ–∫–æ–Ω–æ–º–ª—è—Ç—å –∫–æ—à—Ç–∏. –ó—Ä–æ–±–ª—è—Ç—å –≤—Å–µ, —â–æ–± –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–æ –±—É–ª–æ –≤ —Ä–∞–¥—ñ—Å—Ç—å! 
    –ú–∏ ‚Äì –∫–ª—É–±, —É —è–∫–æ–º—É –∫–æ–∂–Ω–∞ –º–∞–º–∞ –∑–Ω–∞–π–¥–µ —â–æ—Å—å –∫–æ—Ä–∏—Å–Ω–µ –¥–ª—è —Å–µ–±–µ!
                    """, reply_markup=markup)
            elif call.data == 'f2':
                markup = types.InlineKeyboardMarkup(row_width=1)
                switch_buttonl = [
                    types.InlineKeyboardButton(
                        text='–°—Ç–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü–µ—é –∫–ª—É–±—É X-Mothers',
                        callback_data="k1"
                    ),
                ]
                markup.add(*switch_buttonl)
                bot.send_message(call.message.chat.id, """ 
–ó –∫–∞—Ä—Ç–æ—é —É—á–∞—Å–Ω–∏—Ü—ñ –∫–ª—É–±—É X-Mothers –≤–∏ –∑–º–æ–∂–µ—Ç–µ:
‚úÖ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏ —Ç–∞ –ø–æ—Å–ª—É–≥–∏ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ –∑—ñ –∑–Ω–∏–∂–∫–∞–º–∏
‚úÖ –ë—Ä–∞—Ç–∏ —É—á–∞—Å—Ç—å —É –ø–æ–¥—ñ—è—Ö —Ç–∞ –º–∞–π—Å—Ç–µ—Ä-–∫–ª–∞—Å–∞—Ö –∫–ª—É–±—É
‚úÖ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –Ω–∞—à–∏—Ö –º–∞–º-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—ñ–≤ –≤–∞—à–æ–≥–æ –º—ñ—Å—Ç–∞
‚úÖ –î–æ—Å—Ç—É–ø –¥–æ —á–∞—Ç—É –º–∞–º –≤–∞—à–æ–≥–æ –º—ñ—Å—Ç–∞
‚úÖ –î–æ—Å—Ç—É–ø –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—ó —Ç–∞ –∫–æ—Ä–∏—Å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∫–ª—É–±—É
‚úÖ –î–æ—Å—Ç—É–ø –¥–æ –≤–∞–∫–∞–Ω—Å—ñ–π –¥–ª—è –º–∞–º —É –¥–µ–∫—Ä–µ—Ç—ñ
‚úÖ –ë—Ä–∞—Ç–∏ —É—á–∞—Å—Ç—å —É –∫–æ–Ω–∫—É—Ä—Å–∞—Ö —Ç–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à–∞—Ö –∫–ª—É–±—É. 
                """, reply_markup=markup)

            elif call.data == 'f3':
                markup = types.InlineKeyboardMarkup(row_width=1)
                switch_buttonll = [
                    types.InlineKeyboardButton(
                        text='–°—Ç–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü–µ—é –∫–ª—É–±—É X-Mothers',
                        callback_data="k1"
                    ),
                ]
                markup.add(*switch_buttonll)
                bot.send_message(call.message.chat.id, '–©–æ–± —Å—Ç–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü–µ—é –∫–ª—É–±—É, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –∞–Ω–∫–µ—Ç—É.',
                                 reply_markup=markup)

            elif call.data == 'f4':
                markup = types.InlineKeyboardMarkup(row_width=1)
                switch_buttonlll = [
                    types.InlineKeyboardButton(
                        text='–ù–∞—à—ñ –ø–∞—Ä—Ç–Ω–µ—Ä–∏',
                        url="https://www.xmothers.com/partners/"
                    ),
                ]
                markup.add(*switch_buttonlll)
                bot.send_message(call.message.chat.id, """ –ù–∞—à—ñ –ø–∞—Ä—Ç–Ω–µ—Ä–∏ - –º–∞–≥–∞–∑–∏–Ω–∏ —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –º–∞–º —Ç–∞ –¥—ñ—Ç–æ—á–æ–∫, –º–∞–º–∏-–±–ª–æ–≥–µ—Ä–∏, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏, –∫–æ–º–ø–∞–Ω—ñ—ó, —è–∫—ñ –Ω–∞–¥–∞—é—Ç—å –ø–æ—Å–ª—É–≥–∏ –º–∞–º–∞–º. 
                –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–∏–≤—ñ–ª–µ—ó –∫–ª—É–±—É X-Mothers –≤—ñ–¥ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤, –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä—É–π—Ç–µ –∫–∞—Ä—Ç–∫—É —É—á–∞—Å–Ω–∏—Ü—ñ –≤ —ó—Ö –æ—Ñ–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω—ñ, –∞–±–æ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–∫—Ä—ñ–Ω—à–æ—Ç –≤ –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω.""",
                                 reply_markup=markup)
            elif call.data == 'f5':
                markup = types.InlineKeyboardMarkup(row_width=1)
                switch_buttonllqt = [
                    types.InlineKeyboardButton(
                        text='–ù–∞—à—ñ —á–∞—Ç–∏ ',
                        url="https://www.xmothers.com/contact/"
                    ),
                ]
                markup.add(*switch_buttonllqt)
                bot.send_message(call.message.chat.id, '–Ø–∫ –º–µ–Ω—ñ –∑–Ω–∞–π—Ç–∏ —á–∞—Ç –º–∞–º –º–æ–≥–æ –º—ñ—Å—Ç–∞? ', reply_markup=markup)
            elif call.data == 'f6':
                markup = types.InlineKeyboardMarkup(row_width=1)
                switch_buttonllq = [
                    types.InlineKeyboardButton(
                        text='–ó–≤‚Äô—è–∑–∞—Ç–∏—Å—å –∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–æ–º',
                        url="tg://resolve?domain=xmothers"
                    ),
                ]
                markup.add(*switch_buttonllq)
                bot.send_message(call.message.chat.id, '–Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π—à–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è ‚Äì –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º!',
                                 reply_markup=markup)
            else:
                bot.send_message(call.message.chat.id, '–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –¢–∏—Å–Ω–∏ –Ω–∞ - /menu')

    except Exception as e:
        print(repr(e))


@bot.message_handler(func=lambda c: True, content_types=['text'])
def info_message(message):
    bot.edit_message_reply_markup(message.chat.id, message_id=message.message_id - 1, reply_markup='')


@bot.message_handler(content_types=['text'])
def get_h1(message):
    if message.text == '–¢–∞–∫':
        global name
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, "–í–∞—à–µ –ø—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º'—è", reply_markup=a)
        bot.register_next_step_handler(message, get_name)
    elif message.text == '–ù—ñ':
        bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–¥—É–º–∞–ª–∏? –¢–∏—Å–Ω—ñ—Ç—å –Ω–∞ /menu', reply_markup=a)


# def get_h1(message):
# sql.execute("SELECT
# login FROM users WHERE login = '{h1}'")
# if sql.fetchone() is None:
#   sql.execute(f"INSERT INTO users VALUES (?)", (h1))
#   db.commit()
#   bot.send_message(message.from_user.id,"–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è")
#   bot.register_next_step_handler(message, get_h2)
# else:
#     bot.send_message(message.from_user.id, '–¢–∞–∫–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π!')
#    bot.send_message(message.from_user.id, '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –º–µ–Ω—é - /menu')

def get_name(message):
    name = message.text
    bot.send_message(message.from_user.id, "–ú—ñ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è")
    bot.register_next_step_handler(message, get_h3)


def get_h3(message):
    h3 = message.text
    bot.send_message(message.from_user.id, "–¢–µ–ª–µ—Ñ–æ–Ω")
    bot.register_next_step_handler(message, get_h4)


def get_h4(message):
    h4 = message.text
    bot.send_message(message.from_user.id, "–ï–º–µ–π–ª")
    bot.register_next_step_handler(message, get_h5)


def get_h5(message):
    h5 = message.text
    bot.send_message(message.from_user.id, "–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤–∞—à—É —Å–æ—Ü. –º–µ—Ä–µ–∂—É")
    bot.register_next_step_handler(message, get_inst)


def get_inst(message):
    h6 = message.text
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–¢–∞–∫")
    item2 = types.KeyboardButton("–ù—ñ");
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, '–í–∏ –º–∞–º–∞', reply_markup=markup)
    bot.register_next_step_handler(message, get_mama)


def get_mama(message):
    if message.text == '–¢–∞–∫':
        mama = '–¢–∞–∫'
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–•–ª–æ–ø—á–∏–∫")
        item2 = types.KeyboardButton("–î—ñ–≤—á–∏–Ω–∫–∞")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–•—Ç–æ —É –≤–∞—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, get_h7)
    elif message.text == '–ù—ñ':
        mama = '–ù—ñ'
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–í–∏ –≤–∞–≥—ñ—Ç–Ω–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, get_vg2)


def get_mama(message):
    vg = message.text
    if message.text == '–¢–∞–∫':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–•–ª–æ–ø—á–∏–∫")
        item2 = types.KeyboardButton("–î—ñ–≤—á–∏–Ω–∫–∞")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–•—Ç–æ —É –≤–∞—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, get_h7)
    elif message.text == '–ù—ñ':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–í–∏ –≤–∞–≥—ñ—Ç–Ω–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, get_vg2)


def get_h7(message):
    h7 = message.text
    if message.text == '–•–ª–æ–ø—á–∏–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω—å–æ–≥–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl)
    elif message.text == '–î—ñ–≤—á–∏–Ω–∫–∞':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω–µ—ó –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl)


def get_babyl(message):
    babyl = message.text
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–¢–∞–∫")
    item2 = types.KeyboardButton("–ù—ñ")
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, '–£ –≤–∞—Å —î —â–µ –¥—ñ—Ç–∫–∏?', reply_markup=markup)
    bot.register_next_step_handler(message, get_babyone2)


def get_babyone2(message):
    babyone2 = message.text
    if message.text == '–¢–∞–∫':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–•–ª–æ–ø—á–∏–∫")
        item2 = types.KeyboardButton("–î—ñ–≤—á–∏–Ω–∫–∞")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–•—Ç–æ —É –≤–∞—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, get_q1)
    elif message.text == '–ù—ñ':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–í–∏ –≤–∞–≥—ñ—Ç–Ω–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, get_vg2)


def get_q1(message):
    q1 = message.text
    if message.text == '–•–ª–æ–ø—á–∏–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω—å–æ–≥–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl)
    elif message.text == '–î—ñ–≤—á–∏–Ω–∫–∞':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω–µ—ó –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl)


def get_babyl(message):
    babyl = message.text
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–¢–∞–∫")
    item2 = types.KeyboardButton("–ù—ñ")
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, '–£ –≤–∞—Å —î —â–µ –¥—ñ—Ç–∫–∏?', reply_markup=markup)
    bot.register_next_step_handler(message, get_babyone2)


#
def get_babyone2(message):
    babyone2 = message.text
    if message.text == '–¢–∞–∫':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–•–ª–æ–ø—á–∏–∫")
        item2 = types.KeyboardButton("–î—ñ–≤—á–∏–Ω–∫–∞")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–•—Ç–æ —É –≤–∞—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, get_q2)
    elif message.text == '–ù—ñ':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–í–∏ –≤–∞–≥—ñ—Ç–Ω–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, get_vg2)


def get_q2(message):
    q2 = message.text
    if message.text == '–•–ª–æ–ø—á–∏–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω—å–æ–≥–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl1)
    elif message.text == '–î—ñ–≤—á–∏–Ω–∫–∞':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω–µ—ó –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl1)


def get_babyl1(message):
    babyl1 = message.text
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–¢–∞–∫")
    item2 = types.KeyboardButton("–ù—ñ")
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, '–£ –≤–∞—Å —î —â–µ –¥—ñ—Ç–∫–∏?', reply_markup=markup)
    bot.register_next_step_handler(message, get_babyone3)


#
def get_babyone3(message):
    babyone3 = message.text
    if message.text == '–¢–∞–∫':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–•–ª–æ–ø—á–∏–∫")
        item2 = types.KeyboardButton("–î—ñ–≤—á–∏–Ω–∫–∞")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–•—Ç–æ —É –≤–∞—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, get_q2)
    elif message.text == '–ù—ñ':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–í–∏ –≤–∞–≥—ñ—Ç–Ω–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, get_vg2)


def get_q2(message):
    q2 = message.text
    if message.text == '–•–ª–æ–ø—á–∏–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω—å–æ–≥–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl)
    elif message.text == '–î—ñ–≤—á–∏–Ω–∫–∞':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω–µ—ó –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl)


def get_babyl2(message):
    babyl2 = message.text
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–¢–∞–∫")
    item2 = types.KeyboardButton("–ù—ñ")
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, '–£ –≤–∞—Å —î —â–µ –¥—ñ—Ç–∫–∏?', reply_markup=markup)
    bot.register_next_step_handler(message, get_babyone4)


#
def get_babyone4(message):
    babyone4 = message.text
    if message.text == '–¢–∞–∫':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–•–ª–æ–ø—á–∏–∫")
        item2 = types.KeyboardButton("–î—ñ–≤—á–∏–Ω–∫–∞")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–•—Ç–æ —É –≤–∞—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, get_q4)
    elif message.text == '–ù—ñ':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–í–∏ –≤–∞–≥—ñ—Ç–Ω–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, get_vg2)


def get_q4(message):
    q4 = message.text
    if message.text == '–•–ª–æ–ø—á–∏–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω—å–æ–≥–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl4)
    elif message.text == '–î—ñ–≤—á–∏–Ω–∫–∞':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω–µ—ó –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl4)


def get_babyl4(message):
    babyl4 = message.text
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–¢–∞–∫")
    item2 = types.KeyboardButton("–ù—ñ")
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, '–£ –≤–∞—Å —î —â–µ –¥—ñ—Ç–∫–∏?', reply_markup=markup)
    bot.register_next_step_handler(message, get_babyone5)


def get_babyone5(message):
    babyone5 = message.text
    if message.text == '–¢–∞–∫':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–•–ª–æ–ø—á–∏–∫")
        item2 = types.KeyboardButton("–î—ñ–≤—á–∏–Ω–∫–∞")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–•—Ç–æ —É –≤–∞—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, get_q5)
    elif message.text == '–ù—ñ':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–í–∏ –≤–∞–≥—ñ—Ç–Ω–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, get_vg2)


def get_q5(message):
    q5 = message.text
    if message.text == '–•–ª–æ–ø—á–∏–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω—å–æ–≥–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl5)
    elif message.text == '–î—ñ–≤—á–∏–Ω–∫–∞':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω–µ—ó –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl5)


def get_babyl5(message):
    babyl5 = message.text
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–¢–∞–∫")
    item2 = types.KeyboardButton("–ù—ñ")
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, '–£ –≤–∞—Å —î —â–µ –¥—ñ—Ç–∫–∏?', reply_markup=markup)
    bot.register_next_step_handler(message, get_babyone5)


#
def get_babyone6(message):
    babyone6 = message.text
    if message.text == '–¢–∞–∫':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–•–ª–æ–ø—á–∏–∫")
        item2 = types.KeyboardButton("–î—ñ–≤—á–∏–Ω–∫–∞")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–•—Ç–æ —É –≤–∞—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, get_q6)
    elif message.text == '–ù—ñ':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–í–∏ –≤–∞–≥—ñ—Ç–Ω–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, get_vg2)


def get_q6(message):
    q6 = message.text
    if message.text == '–•–ª–æ–ø—á–∏–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω—å–æ–≥–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl6)
    elif message.text == '–î—ñ–≤—á–∏–Ω–∫–∞':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ö–æ–ª–∏ —É –Ω–µ—ó –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è?(–≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ- –¥–¥/–º–º/—Ä—Ä—Ä—Ä)',
                         reply_markup=a)
        bot.register_next_step_handler(message, get_babyl6)


def get_vg(message):
    vg = message.text
    if message.text == '–¢–∞–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ê –Ω–∞ —è–∫–æ–º—É –≤–∏ —Ç–∏–∂–Ω—ñ?', reply_markup=a)
        bot.register_next_step_handler(message, get_week)
    elif message.text == '–ù—ñ':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ê –ø–ª–∞–Ω—É–µ—Ç–µ?', reply_markup=a)
        bot.register_next_step_handler(message, get_plan)


def get_babyl6(message):
    babyl6 = message.text
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–¢–∞–∫")
    item2 = types.KeyboardButton("–ù—ñ")
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, '–£ –≤–∞—Å —î —â–µ –¥—ñ—Ç–∫–∏?', reply_markup=markup)
    bot.register_next_step_handler(message, get_babyone6)


def get_vg2(message):
    vg2 = message.text
    if message.text == '–¢–∞–∫':
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, '–ê –Ω–∞ —è–∫–æ–º—É –≤–∏ —Ç–∏–∂–Ω—ñ?', reply_markup=a)
        bot.register_next_step_handler(message, get_week)
    elif message.text == '–ù—ñ':
        markup = types.ReplyKeyboardMarkup(True, True)
        item1 = types.KeyboardButton("–¢–∞–∫")
        item2 = types.KeyboardButton("–ù—ñ")
        markup.add(item1, item2)
        bot.send_message(message.from_user.id, '–ê –ø–ª–∞–Ω—É–µ—Ç–µ?', reply_markup=markup)
        bot.register_next_step_handler(message, get_plan)


def get_plan(message):
    if message.text == '–¢–∞–∫':
        plan = '–ü–ª–∞–Ω—É—î –¥–∏—Ç–∏–Ω—É'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–í—ñ–¥ –ø–æ–¥—Ä—É–≥–∏")
        item2 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ")
        item3 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Ä–µ–∫–ª–∞–º—É —É Google")
        item4 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Ä–æ–∑—Å–∏–ª–∫—É")
        item5 = types.KeyboardButton("–ß–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª –Ω–∞ YouTube")
        item6 = types.KeyboardButton("–ß–µ—Ä–µ–∑ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∫–ª–∞–º—É")
        markup.add(item1, item2, item4, item5, item6)
        bot.send_message(message.from_user.id, '–ó–≤—ñ–¥–∫–∏ –≤–∏ –¥—ñ–∑–Ω–∞–ª–∏—Å—å –ø—Ä–æ –∫–ª—É–±', reply_markup=markup)
        bot.register_next_step_handler(message, get_PR)

    elif message.text == '–ù—ñ':
        a = telebot.types.ReplyKeyboardRemove()
        plan == ' –ù–µ –ø–ª–∞–Ω—É—î –¥–∏—Ç–∏–Ω—É'
        bot.send_message(message.from_user.id, '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–∫—ñ–Ω—á–µ–Ω–∞', reply_markup=a)
        bot.send_message(message.from_user.id, '–û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–∫—É)')
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–í—ñ–¥ –ø–æ–¥—Ä—É–≥–∏")
        item2 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ")
        item3 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Ä–µ–∫–ª–∞–º—É —É Google")
        item4 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Ä–æ–∑—Å–∏–ª–∫—É")
        item5 = types.KeyboardButton("–ß–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª –Ω–∞ YouTube")
        item6 = types.KeyboardButton("–ß–µ—Ä–µ–∑ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∫–ª–∞–º—É")
        markup.add(item1, item2, item4, item5, item6)
        bot.send_message(message.from_user.id, '–ó–≤—ñ–¥–∫–∏ –≤–∏ –¥—ñ–∑–Ω–∞–ª–∏—Å—å –ø—Ä–æ –∫–ª—É–±', reply_markup=markup)
        bot.register_next_step_handler(message, get_PR)


def get_week(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–í—ñ–¥ –ø–æ–¥—Ä—É–≥–∏")
    item2 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ")
    item3 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Ä–µ–∫–ª–∞–º—É —É Google")
    item4 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Ä–æ–∑—Å–∏–ª–∫—É")
    item5 = types.KeyboardButton("–ß–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª –Ω–∞ YouTube")
    item6 = types.KeyboardButton("–ß–µ—Ä–µ–∑ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∫–ª–∞–º—É")
    markup.add(item1, item2, item4, item5, item6)
    bot.send_message(message.from_user.id, '–ó–≤—ñ–¥–∫–∏ –≤–∏ –¥—ñ–∑–Ω–∞–ª–∏—Å—å –ø—Ä–æ –∫–ª—É–±', reply_markup=markup)
    bot.register_next_step_handler(message, get_reg)


def get_PR(message):
    markup = types.ReplyKeyboardMarkup(True, True)
    item1 = types.KeyboardButton("–í—ñ–¥ –ø–æ–¥—Ä—É–≥–∏")
    item2 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ")
    item3 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Ä–µ–∫–ª–∞–º—É —É Google")
    item4 = types.KeyboardButton("–ß–µ—Ä–µ–∑ —Ä–æ–∑—Å–∏–ª–∫—É")
    item5 = types.KeyboardButton("–ß–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª –Ω–∞ YouTube")
    item6 = types.KeyboardButton("–ß–µ—Ä–µ–∑ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∫–ª–∞–º—É")
    markup.add(item1, item2, item4, item5, item6)
    bot.send_message(message.from_user.id, '–ó–≤—ñ–¥–∫–∏ –≤–∏ –¥—ñ–∑–Ω–∞–ª–∏—Å—å –ø—Ä–æ –∫–ª—É–±', reply_markup=markup)
    bot.register_next_step_handler(message, get_reg)


def smm(message):
    if message.text == '–í—ñ–¥ –ø–æ–¥—Ä—É–≥–∏':
        PR = '–í—ñ–¥ –ø–æ–¥—Ä—É–≥–∏'
    elif message.text == '–ß–µ—Ä–µ–∑ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ':
        PR = '–ß–µ—Ä–µ–∑ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ'
    elif message.text == '–ß–µ—Ä–µ–∑ —Ä–µ–∫–ª–∞–º—É —É Google':
        PR = '–ß–µ—Ä–µ–∑ —Ä–µ–∫–ª–∞–º—É —É Google'
    elif message.text == '–ß–µ—Ä–µ–∑ —Ä–æ–∑—Å–∏–ª–∫—É':
        PR = '–ß–µ—Ä–µ–∑ —Ä–æ–∑—Å–∏–ª–∫—É'
    elif message.text == '–ß–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª –Ω–∞ YouTube':
        PR = '–ß–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª –Ω–∞ YouTube'
    elif message.text == '–ß–µ—Ä–µ–∑ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∫–ª–∞–º—É':
        PR = '–ß–µ—Ä–µ–∑ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∫–ª–∞–º—É'


def get_reg(message):
    global name
    text1 = message.from_user.id
    text2 = '–û—Å—å –≤–∞—à–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ –∫–∞—Ä—Ç–∫–∞'
    text = name
    tatras = Image.open(R'C:\–•-\Foto.jpg')
    idraw = ImageDraw.Draw(tatras)
    font = ImageFont.truetype(R"C:\Windows\Fonts\arial.ttf", size=48)
    font2 = ImageFont.truetype(R"C:\Windows\Fonts\arial.ttf", size=28)
    idraw.text((350, 380), text, font=font)
    idraw.text((900, 10), str(text1), font=font2)
    tatras.save(R'C:\–•-\Foto5.jpg')
    img1 = io.open(R'C:\–•-\Foto5.jpg', 'rb')
    bot.send_photo(message.from_user.id, img1, caption=text2)


bot.polling(none_stop=True, interval=0)